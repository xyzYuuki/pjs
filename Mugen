local repo = 'https://raw.githubusercontent.com/xyzYuuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({


    Title = 'Yuki Hub | Mugen Train | .gg/U8QWcNhkES',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

function antiafk()
    local bb = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:Connect(function()
            bb:CaptureController()
            bb:ClickButton2(Vector2.new())
        end)
    end
antiafk()

local Player = game:GetService("Players").LocalPlayer;
local player = game:GetService("Players").LocalPlayer;
local UIS = game:GetService'UserInputService';
local Players = game:FindService("Players")
local players = game:FindService("Players")
local plr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local CurrentCamera = Workspace.CurrentCamera
local worldToViewportPoint = CurrentCamera.worldToViewportPoint
local UserInputService = cloneref(game:GetService'UserInputService')
local runservice = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local PathfindingService = game:GetService("PathfindingService")
local mouse = player:GetMouse()
local mobs = {""} -- MOBS TABLE
local npcs = {""}
local fiend = {}
local fiends = {}
local Character = Player.Character
local offset = 0
local zones = {}
local zonesN = {""}
local boss = {}
local enemy = {}
local noclipE = false
local antifall = nil
local tp_speed = 250
local infinite_gas = false
local infinite_blade_durability = false


local mt = getrawmetatable(game)
local nc = mt.__namecall

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

--Instances
local Map = workspace.Map
local Mobs = workspace.Mobs
local Remotes = ReplicatedStorage.Remotes
local Client = Players.LocalPlayer

--#region Functions
local spawn, wait = task.spawn, task.wait

local FireServer = Instance.new("RemoteEvent").FireServer
local InvokeServer = Instance.new("RemoteFunction").InvokeServer

function Call(self, ...) --Caching the FireServer and InvokeServer functions for optimization
    local Method = self.ClassName == ("RemoteEvent") and FireServer or self.ClassName == ("RemoteFunction") and InvokeServer

    return spawn(Method, self, ...)
end

player.Idled:Connect(function()
    VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    task.wait(1)
    VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)



local Initiate_S = Remotes.To_Server.Handle_Initiate_S_

local AttackMethods = {
    Fist = "fist_combat",
    Sword = "Sword_Combat_Slash",
    Claws = "claw_Combat_Slash",
    Fans = "fans_combat_slash",
    Scythe = "Scythe_Combat_Slash",
}

function Attack()
    if Method == nil then 
        Method = "Fist"
    end
    local Method = AttackMethods[Method]

    for Cycle=1, 8 do
        Call(
            Initiate_S,
            Method,
            Client,
            Client.Character,
            Client.Character.HumanoidRootPart,
            Client.Character.Humanoid,
            Cycle ~= 8 and Cycle or Cycle == 8 and 919
        )
        task.wait(0.2)
    end
end


function Attack1()
    if Method == nil then 
        Method = "Fist"
    end
    local Method = AttackMethods[Method]

    for Cycle=1, 8 do
        Call(
            Initiate_S,
            Method,
            Client,
            Client.Character,
            Client.Character.HumanoidRootPart,
            Client.Character.Humanoid,
            919,
            "ground_slash"
        )
        Call(
            Initiate_S,
            Method,
            Client,
            Client.Character,
            Client.Character.HumanoidRootPart,
            Client.Character.Humanoid,
            math.huge,
            "ground_slash"
        )
    end
end

function CreateInstance(Class, Properties)
    local Instance = Instance.new(Class)

    for Property, Value in Properties do
        Instance[Property] = Value
    end

    return Instance
end
--#endregion
function findMob1()
    local largest = math.huge
    local closestChild = nil
    local hrp = Client.Character:WaitForChild("HumanoidRootPart")
    for i, v in pairs(game:GetService("Workspace").Mobs:GetDescendants()) do
        if v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health > 0 then
            local magnitude = (Client.Character.HumanoidRootPart.Position - v:GetBoundingBox().Position).magnitude
            if magnitude < largest then
                closestChild = v
                largest = magnitude
            end
        end
    end
    return closestChild
end

local Orbs = {
    "InstaKill",
    "HealthRegen",
    "StaminaRegen",
    "BloodMoney",
    "DoublePoints",
}

function ClaimOrbs()
    for i, Orb in next, Map:GetChildren() do
        if table.find(Orbs, Orb.Name) then
            pcall(Teleport, Orb:FindFirstChildOfClass("MeshPart").CFrame.Position, nil, 256)
        end
    end
end

local enabled = true
local walkSpeed = 100

function Walkspeed()
    local UIS = game:GetService("UserInputService")
    local RS = game:GetService("RunService")
    local W, A, S, D
    local xVelo, yVelo

    RS.RenderStepped:Connect(function()
        if not enabled then return end
        task.wait(0.1)
        local HRP = game.Players.LocalPlayer.Character.HumanoidRootPart
        local C = game.Workspace.CurrentCamera
        local LV = C.CFrame.LookVector

        for i,v in pairs(UIS:GetKeysPressed()) do
            if v.KeyCode == Enum.KeyCode.W then
                W = true
            end
            if v.KeyCode == Enum.KeyCode.A then
                A = true
            end
            if v.KeyCode == Enum.KeyCode.S then
                S = true
            end
            if v.KeyCode == Enum.KeyCode.D then
                D = true
            end
        end

        if W == true and S == true then
            yVelo = false
            W,S = nil
        end

        if A == true and D == true then
            xVelo = false
            A,D = nil
        end

        if yVelo ~= false then
            if W == true then
                if xVelo ~= false then
                    if A == true then
                        local LeftLV = (C.CFrame * CFrame.Angles(0, math.rad(45), 0)).LookVector
                        HRP.Velocity = Vector3.new((LeftLV.X * walkSpeed), HRP.Velocity.Y, (LeftLV.Z * walkSpeed))
                        W,A = nil
                    else
                        if D == true then
                            local RightLV = (C.CFrame * CFrame.Angles(0, math.rad(-45), 0)).LookVector
                            HRP.Velocity = Vector3.new((RightLV.X * walkSpeed), HRP.Velocity.Y, (RightLV.Z * walkSpeed))
                            W,D = nil
                        end
                    end
                end
            else
                if S == true then
                    if xVelo ~= false then
                        if A == true then
                            local LeftLV = (C.CFrame * CFrame.Angles(0, math.rad(135), 0)).LookVector
                            HRP.Velocity = Vector3.new((LeftLV.X * walkSpeed), HRP.Velocity.Y, (LeftLV.Z * walkSpeed))
                            S,A = nil
                        else
                            if D == true then
                                local RightLV = (C.CFrame * CFrame.Angles(0, math.rad(-135), 0)).LookVector
                                HRP.Velocity = Vector3.new((RightLV.X * walkSpeed), HRP.Velocity.Y, (RightLV.Z * walkSpeed))
                                S,D = nil
                            end
                        end
                    end
                end
            end
        end

if W == true then
   HRP.Velocity = Vector3.new((LV.X * walkSpeed), HRP.Velocity.Y, (LV.Z * walkSpeed))
end
if S == true then
   HRP.Velocity = Vector3.new(-(LV.X * walkSpeed), HRP.Velocity.Y, -(LV.Z * walkSpeed))
end
if A == true then
   local LeftLV = (C.CFrame * CFrame.Angles(0, math.rad(90), 0)).LookVector
   HRP.Velocity = Vector3.new((LeftLV.X * walkSpeed), HRP.Velocity.Y, (LeftLV.Z * walkSpeed))
end
if D == true then
   local RightLV = (C.CFrame * CFrame.Angles(0, math.rad(-90), 0)).LookVector
   HRP.Velocity = Vector3.new((RightLV.X * walkSpeed), HRP.Velocity.Y, (RightLV.Z * walkSpeed))
end

xVelo, yVelo, W, A, S, D = nil
end)

end



local function moveto(obj, speed)
    local info = TweenInfo.new(((Client.Character.HumanoidRootPart.Position - obj.Position).Magnitude) / speed,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(Client.Character.HumanoidRootPart, info, {CFrame = obj})
    if not Client.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", Client.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0, 0, 0)
        tween:Play()
        tween.Completed:Wait()
        antifall:Destroy()
    end
end

local function GetNearestBoss()
        
    local Bosses = game:GetService("Workspace").Mobs:GetDescendants()
    local BossesTable = {}
 
    for i,v in pairs(Bosses) do
        if v:IsA("Model") and v:FindFirstChild("Humanoid") then
            if v.Humanoid.Health > 0 then
                table.insert(BossesTable, v)
            end
        end
    end
 
    local NearestBoss = nil
    local NearestBossDistance = math.huge
 
    for i,v in pairs(BossesTable) do
        local Distance = GetDistance(v:GetModelCFrame() * FarmModes)
        if Distance < NearestBossDistance then
            NearestBoss = v
            NearestBossDistance = Distance
        end
    end
 
    return NearestBoss
 end


 local UIS = game:GetService("UserInputService")
 local VirtualUser = game:GetService("VirtualUser")
 local VIM =game:GetService("VirtualInputManager")
 local ReplStorage = game:GetService("ReplicatedStorage")
 local Players = game:GetService("Players")
 local Imput = game:GetService("UserInputService")
 local COREGUI = game:GetService("CoreGui")
 local LP = game:GetService("Players").LocalPlayer
 local HttpService = game:GetService("HttpService")
 local RunS = game:GetService("RunService")
 local X, Y = 0, 0
 local Mouse = LP:GetMouse()
 local GetLocalName = LP.Name
 local request = (syn and syn.request) or (http and http.request) or http_request
 local client = game:GetService("Players").LocalPlayer
 local Plr = game:GetService("Players").LocalPlayer
 local Data = game:GetService("ReplicatedStorage")["Player_Data"][game.Players.LocalPlayer.Name]
 
 local function pressKey(key)
     VIM:SendKeyEvent(true, key, false, game)
     wait()
     VIM:SendKeyEvent(false, key, false, game)
 end
 
 local function GetHuman()
     local h = LP.Character
     h = h and (h:FindFirstChild("Humanoid") or h:FindFirstChildWhichIsA("Humanoid"))
     return h or workspace.CurrentCamera.CameraSubject
 end
 
 local GramxProjectFloat = tostring(math.random(0, 100000))
 local TweenFloatVelocity = Vector3.new(0,0,0)
 function CreateTweenFloat()
     local BV = game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(GramxProjectFloat) or Instance.new("BodyVelocity")
     BV.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
     BV.Name = GramxProjectFloat
     BV.MaxForce = Vector3.new(100000, 100000, 100000)
     BV.Velocity = TweenFloatVelocity
 end
 
 
 local function GetDistance(Endpoint)
     if typeof(Endpoint) == "Instance" then
     Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
     elseif typeof(Endpoint) == "CFrame" then
     Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
     end
     local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
     return Magnitude
 end
 
 
 function Tween(Endpoint)
     if typeof(Endpoint) == "Instance" then
     Endpoint = Endpoint.CFrame
     end
     local TweenFunc = {}
     local Distance = GetDistance(Endpoint)
     local TweenInfo = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Distance/getgenv().TweenSpeed, Enum.EasingStyle.Linear), {CFrame = Endpoint * CFrame.fromAxisAngle(Vector3.new(1,0,0), math.rad(0))})
     TweenInfo:Play()
     function TweenFunc:Cancel()
     TweenInfo:Cancel()
     return false
     end
     if Distance <= 100 then
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Endpoint
     TweenInfo:Cancel()
     return false
     end
     return TweenFunc
 end
 
 
 function RemoveDMG()
    local part  =  game:GetService("StarterPlayer").StarterPlayerScripts.Client_Modules.Modules.Extra.Damage_Text
 
    local part1 =  game:GetService("ReplicatedStorage").Assets.Extras.Damage_Text
 
    local part2 = game:GetService("Players").LocalPlayer.PlayerScripts.Client_Modules.Modules.Extra.Damage_Text
 
    if part then
        part:Destroy()
    end
 
    if part1 then
        part1:Destroy()
    end
 
    if part2 then
        part2:Destroy()
    end
 end
 
 function RemovePARTICLES()
    local COINS = game:GetService("ReplicatedStorage").Assets.Extras.Coin
 
    local PARTICLES = game:GetService("ReplicatedStorage").Assets.Particles.Parts
 
    if COINS then
        COINS:Destroy()
    end
 
    if PARTICLES then
        PARTICLES:Destroy()
    end
 end


 
-- // FARM METHOD
spawn(function()
    while wait() do
        pcall(function()
            SkillActive = AutoUseSkills and (FarmBoss and NearestMobs) or AutoUseSkills and (FarmQuest and NearestMobs) or AutoUseSkills and (FarmMob and NearestMobs) or AutoUseSkills and (AllBosses and NearestMobs)
            if FarmMethod == "Above" then
                FarmModes = CFrame.new(0,getgenv().Distance,0) * CFrame.Angles(math.rad(-90),0,0) 
            elseif FarmMethod == "Below" then
                FarmModes = CFrame.new(0,-getgenv().Distance,0) * CFrame.Angles(math.rad(90),0,0)
            elseif FarmMethod == "Behind" then
                FarmModes = CFrame.new(0,0,getgenv().Distance)
            elseif FarmMethod == "Front" then
                FarmModes = CFrame.new(0,0,-getgenv().Distance)
            end
            for i,v in pairs(LP.PlayerGui.MainGuis.Items.Scroll:GetChildren()) do
                Insert = true
                if v.ClassName == "Frame" and v.Name ~= "Health Elixir" and v.Name ~= "Health Regen Elixir" and v.Name ~= "Stamina Elixir" and v.Name ~= "Bandage" then
                    for i,v2 in pairs(invTable) do if v2 == v.Name then Insert = false end end
                    if Insert == true then table.insert(invTable, v.Name) end
                end
            end
        end)
    end
   end)
 
 -- // NO CLIP
 
 spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().AllBosses or TPtoLocation or TPtoTrainer or getgenv().GotoMuzan or FarmBoss then
            for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false    
                end
                if v:IsA("Humanoid") then
                    v:ChangeState(11)
                end
            end
        end
    end)
 end)
 
 -- // AUTO ALL BOSSES - FARM
     
 spawn(function()
    while task.wait() do
       pcall(function()
          if getgenv().AllBosses then
 
             if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                antifall3 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
                antifall3.Velocity = Vector3.new(0, 0, 0)
                antifall3.MaxForce = Vector3.new(9e9, 9e9, 9e9)
             elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                local v = GetNearestBoss()
                
                      if v then
                         repeat task.wait()                                      
                            if GetDistance(v:GetModelCFrame() * FarmModes) < 25 and GetDistance(v:GetModelCFrame() * FarmModes) < 150 then
                               if TweenFa then
                               TweenFa:Cancel()
                               wait(.1)
                               end
                               LP.Character.HumanoidRootPart.CFrame = v:GetModelCFrame() * FarmModes
                            else
                               TweenFa = Tween(v:GetModelCFrame() * FarmModes)
                            end
                            if v.Humanoid.Health > 0 and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and GetDistance(v:GetModelCFrame() * FarmModes) < 10 then
                               NearestMobs = true
                            elseif v.Humanoid.Health <= 0 or not v:FindFirstChild("Humanoid") and GetDistance(v:GetModelCFrame() * FarmModes) > 10 then
                               NearestMobs = false
                            end
                         until not getgenv().AllBosses or not v.Parent or v.Humanoid.Health <= 0 or not v:IsDescendantOf(workspace)
                         NearestMobs = false
                end
             end
          else
             antifall3:Destroy()
          end
          if getgenv().AllBosses == false then
             TweenFa:Cancel()
          end
       end)
    end
 end)

--body

local Tabs = {

    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}





local Main = Tabs.Main:AddLeftGroupbox('Main')

local shouldTeleport = false 

Main:AddToggle('AutoRJ', {
    Text = 'Auto Rejoin',
    Default = false,
    Callback = function(enabled)
        shouldTeleport = enabled
   end,
})


repeat wait() until game.CoreGui:FindFirstChild('RobloxPromptGui')

local lp, po, ts = game:GetService('Players').LocalPlayer, game.CoreGui.RobloxPromptGui.promptOverlay, game:GetService('TeleportService')

po.ChildAdded:connect(function(a)
    if a.Name == 'ErrorPrompt' then
        repeat
            if shouldTeleport then
                ts:Teleport(5956785391)
                wait(4)
            else
                break
            end
        until false
    end
end)

--[[local u = Misc:AddButton({
    Text = 'Unlock All Ult',
    DoubleClick = false,
    Tooltip = 'when leaving the game you will lose ',
    Func = function()
        local ult = Instance.new("StringValue")
                ult.Name = "Arrow Spikes"
                ult.Value = "Skill"
                ult.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                local ult2 = ult:Clone()
                local ult3 = ult:Clone()
                local ult4 = ult:Clone()
                local ult5 = ult:Clone()
                local ult6 = ult:Clone()
                local ult7 = ult:Clone()
                local ult8 = ult:Clone()
                local ult9 = ult:Clone()
                local ult10 = ult:Clone()
                local ult11 = ult:Clone()
                local ult12 = ult:Clone()
                local ult13 = ult:Clone()
                local ult14 = ult:Clone()
                local ult15 = ult:Clone()
                local ult16 = ult:Clone()
                local ult17 = ult:Clone()


                ult2.Name = "Flesh Monster"
                ult3.Name = "Blood Burst"
                ult4.Name = "Thunder clap and flash six fold"
                ult5.Name = "Constant Flux"
                ult6.Name = "Caprice"
                ult7.Name = "Idaten Typhoon"
                ult8.Name = "Speed Rush"
                ult9.Name = "Tamari Meteor"
                ult10.Name = "Purgatory"
                ult11.Name = "Devouring Rush"
                ult12.Name = "Annihilation Type"
                ult13.Name = "String Performance"
                ult14.Name = "Swamp Domain"
                ult15.Name = "Obscuring Clouds"
                ult16.Name = "Snowtide Vortex"
                ult17.Name = "Bodhisattva"
                ult2.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult3.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult4.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult5.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult6.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult7.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult8.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult9.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult10.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult11.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult12.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult13.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult14.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult15.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult16.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                ult17.Parent = game:GetService("ReplicatedStorage")["Player_Data"]:FindFirstChild(game:GetService("Players").LocalPlayer.Name)["unlocked_skills"]
                
            end
        })]]
        





local KillAura = Tabs.Main:AddRightGroupbox('Kill Aura')
local Clash = Tabs.Main:AddRightGroupbox('Clash')




getgenv().FarmMethod = "Above"
Main:AddDropdown('FarmMethod', {
   Values = { 'Above', 'Below', 'Behind', 'Front' },
   Default = 1, -- number index of the value / string
   Multi = false, -- true / false, allows multiple choices to be selected
   Text = 'Farm Method',
   Callback = function(self)
       getgenv().FarmMethod = self
   end
})

getgenv().TweenSpeed = 100
Main:AddSlider('MySlider', {
   Text = 'Tween Speed',
   Default = 100,
   Min = 10,
   Max = 500,
   Rounding = 10,
   Compact = false,
   Callback = function(self)
       getgenv().TweenSpeed = self
   end
})

getgenv().Distance = 5
Main:AddSlider('MySlider2', {
   Text = 'Farm Distance',
   Default = 5,
   Min = 1,
   Max = 10,
   Rounding = 1,
   Compact = false,
   Callback = function(self)
       getgenv().Distance = self
   end
})

Main:AddDivider()

Main:AddToggle('RemoveDMG', {
  Text = 'Remove Damage Text',
  Default = false, -- Default value (true / false)
  Callback = function()
     RemoveDMG()
  end
})

Main:AddToggle('RemovePARTICLES', {
  Text = 'Remove Effects',
  Default = false, -- Default value (true / false)
  Callback = function()
     RemovePARTICLES()
  end
})

Main:AddToggle('FarmBosses', {
   Text = 'Auto Mugen',
   Default = false, -- Default value (true / false)
   Callback = function(value)
       getgenv().AllBosses = value
   end
})

Main:AddToggle('AutoLoot', {
    Text = 'Auto Collect',
    Default = false,
    Callback = function(v)
        _G.Autoloot = v
    end
})



local vim = game:GetService('VirtualInputManager')
local rs = game:GetService('RunService')
local clash = false

local function pressKey(key)
    vim:SendKeyEvent(true, key, false, game)
    wait()
    vim:SendKeyEvent(false, key, false, game)
end

local function instanced()
    while clash do
        rs.Heartbeat:Wait(0.3)
        pressKey(Enum.KeyCode[game.Players.LocalPlayer.PlayerGui["universal_client_scripts"].Clashing2["Clash_Ui2"].Holder:WaitForChild('Front').Text])
    end
end

Clash:AddToggle('autoclash', {
    Text = 'Auto Clash',
    Default = false,
    Callback = function(Value)
        clash = Value
        if clash then
            instanced()
        end
    end,
})

local function executeScript()
    local ohString1 = "Change_Value"
    local playerName = game.Players.LocalPlayer.Name
        ohInstance2 = workspace.Debree.clash_folder[playerName .."vsEnmu"][playerName]
        local ohNumber3 = 300
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(ohString1, ohInstance2, ohNumber3)

end

local function toggleLoop()
    while true do
        if toggle then
            executeScript()
        end
        wait(8)
    end
end

spawn(toggleLoop) -- Iniciar o loop em uma thread separada

Clash:AddToggle('instaclash', {
    Text = 'Insta Clash',
    Default = false,
    Callback = function(value)
        toggle = value
    end,
})

Clash:AddButton("Global Clash", function()
    local players = game:GetService("Players"):GetPlayers()

    for _, player in ipairs(players) do
        local playerName = player.Name

        local clashFolder = workspace.Debree.clash_folder
        local playerFolder = clashFolder:FindFirstChild(playerName.."vsEnmu")

        if playerFolder then
            local targetPlayer = playerFolder:FindFirstChild(playerName)
            if targetPlayer then
                local args = {
                    [1] = "Change_Value",
                    [2] = targetPlayer,
                    [3] = 200,  -- Change the value of index 3 to 200
                }

                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
            end
        end
    end
end) -- Add the closing parentheses here

local Misc = Tabs.Main:AddRightGroupbox('Misc')

  local FPS = Misc:AddButton({
    Text = 'FPS Boost',
    DoubleClick = false,
    Func = function()
        local decalsyeeted = true
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0
l.GlobalShadows = false
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level01"
for i, v in pairs(g:GetDescendants()) do
    if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
        v.Enabled = false
    elseif v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
        v.TextureID = 10385902758728957
    end
end
for i, e in pairs(l:GetChildren()) do
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end
   end,
})


CurrentValue = false

local playerName = game.Players.LocalPlayer.Name

local function changeValue(instance, value)
    local args = {"Change_Value", instance, value}
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
end

local function changeColorSmoothly(instance, targetValue, duration)
    local initialValue = instance.Value
    local step = (targetValue - initialValue) / (duration / 0.01)
    local currentTime = 0

    while currentTime < duration do
        instance.Value = instance.Value + step
        changeValue(instance, instance.Value)
        wait(0.01)
        currentTime = currentTime + 0.01
    end
end

local skinColor = game:GetService("ReplicatedStorage").Player_Data[playerName].Customization.Skin_Color

local toggleEnabled = false

local function toggleScript()
    toggleEnabled = not toggleEnabled
    if toggleEnabled then
        spawn(function()
            while toggleEnabled do
                changeColorSmoothly(skinColor.R, math.random(), 0.15)
                changeColorSmoothly(skinColor.G, math.random(), 0.15)
                changeColorSmoothly(skinColor.B, math.random(), 0.15) 
            end
        end)
    end
end


   Misc:AddToggle('RGB', {
    Text = 'RGB Skin',
    Default = false,
    Callback = toggleScript,
})








   Misc:AddToggle('WarFans', {
    Text = 'WarFans Buff',
    Default = false,
    Callback = function(bool)
        toggleActivated = bool -- Atualiza o estado do toggle

    if toggleActivated then
        running = true -- Inicia o loop
        while running do -- Executa o loop enquanto running for verdadeiro
            game:GetService("ReplicatedStorage").Remotes.war_Drums_remote:FireServer(true)
            wait(20.1) -- Aguarda um tempo antes de reiniciar o buff (ajuste conforme necessário)
        end
    else
        running = false -- Interrompe o loop
        game:GetService("ReplicatedStorage").Remotes.war_Drums_remote:FireServer(false)
    end
    end
})

function Teleport(Position, Offset, Speed)
    local Distance = Client:DistanceFromCharacter(Position + (Offset or Vector3.zero))

    if Distance < 2500 then
        local Tween = TweenService:Create(
            Client.Character.HumanoidRootPart,
            TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
            {CFrame = CFrame.new(Position + (Offset or Vector3.zero)
        )})

        Tween:Play()

        return Tween.Completed:Wait()
    else
        Client.Character.HumanoidRootPart.CFrame = Position + (Offset or Vector3.zero)
        
        return wait()
    end
end

spawn(function()
    while task.wait() do
    while _G.Enabled do
        task.wait()
        if not _G.Enabled then return end
        for i, v in next, Mobs:GetChildren() do
            if v:FindFirstChildOfClass("Model") and v:FindFirstChildOfClass("Model"):FindFirstChild("Humanoid") and v:FindFirstChildOfClass("Model"):FindFirstChild("Humanoid").Health > 0 then
                Mob = v:FindFirstChildOfClass("Model")
            pcall(function()
                BodyVelocity:Clone().Parent = Client.Character.LowerTorso
                BodyAngularVelocity:Clone().Parent = Client.Character.LowerTorso
                if not _G.Enabled then return end
                Teleport(Mob.HumanoidRootPart.CFrame.Position, Vector3.new(0, 50, 0), 200)
            end)        
            
            repeat
                local Status = pcall(function()
                    if #Mobs:GetChildren() == 0 then
                        if not _G.Enabled then return end
                        spawn(ClaimOrbs)
                    end
                    if not _G.Enabled then return end
                    Client.Character.HumanoidRootPart.CFrame = Mob.HumanoidRootPart.CFrame
                    wait(0.30)
                    if not _G.Enabled then return end
                    Attack()
                    task.wait(0.1)
                    if not _G.Enabled then return end
                    Teleport(Mob.HumanoidRootPart.CFrame.Position, Vector3.new(0, 50, 0), 250)
                    if not _G.Enabled then return end
                    repeat wait() until Client:WaitForChild("combotangasd123", 9e9).Value == 0 and wait(0.25)
                end)
                if not Status or not _G.Enabled then
                    break
                end

            until wait() and not _G.Enabled or Mob:FindFirstChild("Humanoid") and Mob:FindFirstChild("Humanoid").Health <= 0

            pcall(function()
                Client.Character.LowerTorso:FindFirstChildOfClass("BodyVelocity"):Destroy()
                Client.Character.LowerTorso:FindFirstChildOfClass("BodyAngularVelocity"):Destroy()    
            end)
        end
        end
        wait()
    end
end
end)
spawn(function()
    while task.wait() do
    while _G.Autoloot do
        local lootChests = game:GetService("Workspace").Debree:GetDescendants()
        for _, chest in ipairs(lootChests) do
            if chest and chest.Name == "Loot_Chest" and chest:FindFirstChild("Drops") then
                local remote = chest:WaitForChild("Add_To_Inventory")
                for _, drop in ipairs(chest.Drops:GetChildren()) do
                    remote:InvokeServer(drop.Name)
                end
            end
        end
        
        wait(3)
    end
    end
end)

spawn(function()
    while task.wait() do
        if getgenv().Killaura or getgenv().KillauraOP then
            for i,v in pairs(player.Character:GetChildren()) do
                if v:IsA("Tool") then
                    v.Parent = player.Backpack
                end
            end
        end
    end
end)

game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
    if _G.EXP then
        
        _G.Enabled = false
        getgenv().FarmAll = false
        task.wait(15)
        game:GetService("ReplicatedStorage").TeleportToShop:FireServer()
        task.wait(1)
        Client.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Shop Items"]["EXP Elixir"].Handle.CFrame
        task.wait(0.3)
        repeat
            fireproximityprompt(game:GetService("Workspace")["Shop Items"]["EXP Elixir"].Handle.Buy)
        until task.wait() and Client.leaderstats.Points.Value < 25
        task.wait(300)
        game:GetService("TeleportService"):Teleport(9321822839, Client)  -- replace the numbers with the id of the game you want to teleport to
    elseif _G.WEN then
        _G.Enabled = false
        getgenv().FarmAll = false

        task.wait(15)
        game:GetService("ReplicatedStorage").TeleportToShop:FireServer()
        task.wait(1)
        Client.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Shop Items"]["Wen Bag"]["Cylinder.001"].CFrame
        task.wait(0.3)
        repeat
            fireproximityprompt(game:GetService("Workspace")["Shop Items"]["Wen Bag"].Buy)
        until task.wait() and Client.leaderstats.Points.Value < 25
        task.wait(300)
        game:GetService("TeleportService"):Teleport(9321822839, Client)  -- replace the numbers with the id of the game you want to teleport to
    end
    
    end)

--[[function cuzinpreto()
    local A_1 = "Normal"
local Event = game:GetService("ReplicatedStorage").TeleportCirclesEvent
Event:FireServer(A_1)
end
cuzinpreto()]]
   



local firing = false -- Variable to track the state

KillAura:AddToggle('BypassGKA', {
    Text = 'Bypass Arrow',
    Default = false,
    Tooltip = 'Bypass Arrow GKA',
    Callback = function(state)
        firing = state -- Update the firing state

        if firing then -- Start the loop only if firing is true
            while firing do -- Loop while firing is true
                local Handle_Initiate_S_ = game.ReplicatedStorage.Remotes.To_Server.Handle_Initiate_S_
                Handle_Initiate_S_:InvokeServer("skil_ting_asd", game.Players.LocalPlayer, "arrow_knock_back", 5)
                wait(14)
            end
        end
    end
})

local running = false -- Variable to track the state

KillAura:AddToggle('GKAareroWeeW', {
    Text = 'Arrow Aura',
    Default = false,
    Tooltip = 'Arrow Global Kill Aura',
    Callback = function(state)
        running = state -- Update the running state

        if running then -- Start the loop only if running is true
            while running do -- Loop while running is true
                local success, error = pcall(function()
                    local hitCounter = {} -- Counter for each model

                    for i, v in next, workspace.Mobs:GetDescendants() do
                        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                            local modelId = v:GetFullName()

                            -- Check if the model has a counter and initialize it if not present
                            if not hitCounter[modelId] then
                                hitCounter[modelId] = 0
                            end

                            -- Check if the model has been hit less than 2 times
                            if hitCounter[modelId] < 2 then
                                local humanoid = v:FindFirstChildOfClass("Humanoid")
                                if humanoid and humanoid.Health > 0 then
                                    local Handle_Initiate_S_ = game.ReplicatedStorage.Remotes.To_Server.Handle_Initiate_S_
                                    Handle_Initiate_S_:InvokeServer("arrow_knock_back_damage", game.Players.LocalPlayer.Character, v.HumanoidRootPart.CFrame, v, 500, 500)
                                    hitCounter[modelId] = hitCounter[modelId] + 1
                                else
                                    -- The humanoid health is 0, change to another model
                                    -- Replace the code below with the logic to change the model
                                    print("Model with health 0:", modelId)
                                end
                            end

                            -- Check if we hit two mobs/models
                            local hitCount = 0
                            for _, count in pairs(hitCounter) do
                                hitCount = hitCount + count
                            end
                            if hitCount >= 2 then
                                break -- Exit the loop if we hit two mobs/models
                            end
                        end
                    end
                end)

                if not success then
                    print("An error occurred:", error)
                end

                -- Add a delay between iterations to prevent excessive server load
                wait() -- Adjust the delay time as desired
            end
        end
    end
})


--Main
local BodyVelocity = CreateInstance("BodyVelocity", {MaxForce = Vector3.new(1/0, 1/0, 1/0), Velocity = Vector3.zero, Name = "BV"})
local BodyAngularVelocity = CreateInstance("BodyAngularVelocity", {MaxTorque = Vector3.new(1/0, 1/0, 1/0), AngularVelocity = Vector3.zero, Name = "BAV"})

---Web Hook
local Webhook = Tabs.Main:AddRightGroupbox('WebHook')

local url = "" -- Variável para armazenar o valor do webhook
local isSendingEnabled = false -- Variável para controlar se o envio está habilitado ou não
local itemDelay = 5 -- Atraso em segundos entre o envio de cada item
local waitForPickup = true -- Defina como true se você quiser esperar o jogador pegar o item antes de enviar a mensagem

Webhook:AddInput('WebHook', {
    Default = 'Your Url',
    Numeric = false, -- true / false, only allows numbers
    Finished = false, -- true / false, only calls callback when you press enter

    Text = 'Drops WebHook',


    Placeholder = 'Your Webhook', -- placeholder text when the box is empty
    -- MaxLength is also an option which is the max length of the text

    Callback = function(v)
        url = v
    end,
})

Webhook:AddToggle('DropWebHook', {
    Text = 'Send WebHook',
    Default = false,
    Callback = function(enabled)
        isSendingEnabled = enabled
    end,
})

task.spawn(function()
    while task.wait() do
        pcall(function()
            if isSendingEnabled then
                -- Se o envio estiver habilitado, execute o código para enviar a mensagem no webhook
                -- Verifique se 'url' possui um valor válido antes de enviar a mensagem
                if url and url ~= "" then
                    local player = game.Players.LocalPlayer
                    local playerName = player.Name
                    local userId = player.UserId
                    local avatarUrl = string.format("https://thumbnails.roblox.com/v1/users/avatar?userIds=%d&size=180x180&format=Png&isCircular=true", userId)

                    local lootChests = game:GetService("Workspace").Debree:GetDescendants()
                    for _, chest in ipairs(lootChests) do
                        if chest.Name == "Loot_Chest" and chest:FindFirstChild("Drops") then
                            local remote = chest:WaitForChild("Add_To_Inventory")
                            for _, drop in ipairs(chest.Drops:GetChildren()) do
                                remote:InvokeServer(drop.Name)
                                if waitForPickup then
                                    -- Aguardar o jogador pegar o item antes de enviar a mensagem
                                    repeat
                                        task.wait()
                                    until not drop:IsDescendantOf(player.Backpack) and not drop:IsDescendantOf(player.Character)
                                end

                                -- Enviar a mensagem no webhook
                                local data = {
                                    ["content"] = "*Drop!!!*",
                                    ["embeds"] = {
                                        {
                                            ["title"] = "GAME DROPS!",
                                            ["type"] = "rich",
                                            ["color"] = tonumber(0x7269da),
                                            ["fields"] = {
                                                {
                                                    ["name"] = "Drop:",
                                                    ["value"] = "| "..drop.Name.." |",
                                                    ["inline"] = true
                                                },
                                                {
                                                    ["name"] = "Username",
                                                    ["value"] = "|| "..playerName.." ||",
                                                    ["inline"] = true
                                                },
                                            },
                                            ["thumbnail"] = {
                                                ["url"] = avatarUrl,
                                            }
                                        }
                                    }
                                }

                                local headers = {
                                    ["content-type"] = "application/json"
                                }

                                local httpService = game:GetService("HttpService")
                                local jsonData = httpService:JSONEncode(data)

                                local httpModule = http_request or request or HttpPost or syn.request
                                local requestParams = {
                                    Url = url,
                                    Method = "POST",
                                    Headers = headers,
                                    Body = jsonData
                                }

                                httpModule(requestParams)

                                -- Aguardar o atraso entre os envios de item
                                task.wait(itemDelay)
                            end
                        end
                    end
                end
            end
        end)
    end
end)

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

Webhook:AddInput('KickWebHook', {
    Default = 'Your Url',
    Numeric = false, -- true / false, only allows numbers
    Finished = false, -- true / false, only calls callback when you press enter

    Text = 'Kick WebHook',


    Placeholder = 'Your Webhook', -- placeholder text when the box is empty
    -- MaxLength is also an option which is the max length of the text

    Callback = function(v)
        url = v
    end,
})

Webhook:AddToggle('KickWebHook', {
    Text = 'Send WebHook',
    Default = false,
    Callback = function(enabled)
        isSendingEnabled = enabled
    end,
})

local function CheckPlayerExpulsion()
    local po = game.CoreGui.RobloxPromptGui.promptOverlay

    po.ChildAdded:Connect(function(a)
        if a.Name == 'ErrorPrompt' and isSendingEnabled and url then
            -- O jogador local foi expulso do jogo
            local playerName = player.Name
            local userId = player.UserId
            local avatarUrl = string.format("https://thumbnails.roblox.com/v1/users/avatar?userIds=%d&size=180x180&format=Png&isCircular=true", userId)

            local data = {
                ["content"] = "Estupido",
                ["embeds"] = {
                    {
                        ["title"] = "Expulsão!",
                        ["type"] = "rich",
                        ["color"] = tonumber(0xFF0000),
                        ["fields"] = {
                            {
                                ["name"] = "Username",
                                ["value"] = "|| "..playerName.." ||",
                                ["inline"] = true
                            },
                        },
                        ["thumbnail"] = {
                            ["url"] = avatarUrl,
                        }
                    }
                }
            }

            local headers = {
                ["content-type"] = "application/json"
            }

            local jsonData = HttpService:JSONEncode(data)

            local httpModule = http_request or request or HttpPost or syn.request
            local requestParams = {
                Url = url,
                Method = "POST",
                Headers = headers,
                Body = jsonData
            }

            httpModule(requestParams)
        end
    end)
end

spawn(CheckPlayerExpulsion)


local Misc2 = Tabs.Main:AddLeftGroupbox('Misc2')

Misc2:AddDivider()


   Misc2:AddInput('DisplayName', {
      Default = 'Change Display Name',
      Numeric = false,
      Finished = false,
      Text = 'Change Display Name',
      Placeholder = 'Change Display Name',
      Callback = function(value)
         game:GetService("Players").LocalPlayer.DisplayName = value
      end
  })
   
Misc2:AddButton("Destroy Damage Logs", function()
   local playerGui = game:GetService("Players").LocalPlayer.PlayerGui
   if playerGui:FindFirstChild("Pop_Ups") then
       local bossHp = playerGui.Pop_Ups:FindFirstChild("Bosshp")
       if bossHp then
           local damageLog = bossHp:FindFirstChild("Damage_Log")
           if damageLog then
               damageLog:Destroy()
           end
       end
   end
end)

Misc2:AddToggle('WhiteScreen', {
    Text = 'White Screen [FPS Boost]',
    Default = false,
    Callback = function(state)
       if state then
          game:GetService("RunService"):Set3dRenderingEnabled(false)
       else
          game:GetService("RunService"):Set3dRenderingEnabled(true)
       end
    end
 })



-- Library functions
-- Sets the watermark visibility
Library:SetWatermarkVisibility(true)

-- Example of dynamically-updating watermark with common traits (fps and ping)
local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1;

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;

    Library:SetWatermark(('Yuki Hub | Mugen Train 1.7 | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ));
end);







-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- Adds our MenuKeybind to the ignore list
-- (do you want each config to have a different menu key? probably not.)
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('YukiHub')
SaveManager:SetFolder('YukiHub/ProjectSlayers')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings'])

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
